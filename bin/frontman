#!/usr/bin/env node

// node
var path			= require('path');
var fs = require('fs');

// need to `npm link autocmdr`
var program  = require('commander');

// Local
var frontman = require('../lib/frontman.js');

program._name = "frontman";

program
	.version('0.0.0')
	.usage('[options] filename')
	.option('-t, --template <file>', 'Path to template file')
	.option('-r, --replace', 'Indicate that the template should replace the base')
	.option('-j, --to-json', 'Output JSON')
	.option('-c, --to-cson', 'Output CSON')
	.option('-y, --to-yaml', 'Output YAML')
	.option('-o, --output <dir>', 'Output directory')
	.parse(process.argv);

var files = program.args;

if (files.length < 1 )
	frontman.render({}, program);

if (program.template) {  // Read template once, but don't process yet
	var template = frontman._readFile( path.join(process.cwd(), program.template));
}

files.forEach(function(filename) {
	//console.log(filename);

	var source = frontman._readFile( path.join(process.cwd(), filename));

	var resultObject = frontman._process(source, template, program);

	var _opts = {};
	if (program.toJson) _opts.type = "json";
	if (program.toCson) _opts.type = "cson";
	if (program.toYaml) _opts.type = "yml";

	var result = frontman.stringify(resultObject, _opts.type );	

	//console.log(result);

	if (program.output) {
		//console.log(source);

		// if program.output is directory then use base file name
		// else use output name

		fs.writeFile( program.output, result )
	} else {
		console.log(result);
	}

});

